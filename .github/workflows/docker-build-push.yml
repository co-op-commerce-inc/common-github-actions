name: Tag, Build, Push Docker Image

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      repository:
        required: true
        type: string
    secrets:
      role-to-assume:
        required: true

# on:
#   push:
    # - develop
    # - main
    # - feat/*

# permissions:
#  id-token: write
#  contents: read

jobs:
  create-release:
    name: Creates new release and updates Changelog.md
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}

    steps:
      - uses: actions/checkout@v2

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3.7.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: create release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' && github.ref_name == 'main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  build-push:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: [create-release]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.role-to-assume }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: prepare tags
        id: meta
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          # REGISTRY: ghcr.io/etc
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.REGISTRY }}/${{ inputs.repository }}
          # generate Docker tags
          tags: | # in order: commit sha, develop, latest and version on main
            type=sha,enable=true,prefix=0,suffix=,format=short
            type=raw,value=develop,enable=${{ github.ref_name == 'develop' }}
            type=raw,value=latest,enable=${{ github.ref_name == 'main' }}
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
            type=raw,value=${{ needs.create-release.outputs.tag }},enable=${{ github.ref_name == 'main' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: BUILD_ENV=${{ github.ref_name }}

          cache-from: type=gha
          cache-to: type=gha,mode=max
